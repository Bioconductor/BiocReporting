% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/commit-stats.R
\name{commit_stats}
\alias{commit_stats}
\alias{account_repositories}
\alias{select_repositories}
\alias{filter_r_repos}
\alias{filter_topic_repos}
\alias{repo_list_df}
\alias{repository_commits}
\alias{commits_summary}
\alias{repository_summary}
\alias{summarize_commit_activity}
\alias{print.commit_summary}
\title{Get and summarize repository statistics from GitHub}
\usage{
account_repositories(username, org, github_token = gh::gh_token())

select_repositories(repo_slugs, github_token = gh::gh_token())

filter_r_repos(repo_list, username, org, github_token = gh::gh_token())

filter_topic_repos(
  repo_list,
  username,
  org,
  topics,
  github_token = gh::gh_token()
)

repo_list_df(repo_list)

repository_commits(
  repos_df,
  github_token = gh::gh_token(),
  start_date,
  end_date
)

commits_summary(commits_list, repos_df)

repository_summary(commits_list, repositories, start_date, end_date)

summarize_commit_activity(
  username,
  org,
  repo_slugs,
  topics,
  start_date,
  end_date,
  github_token = gh::gh_token()
)

\method{print}{commit_summary}(x, ...)
}
\arguments{
\item{username}{\code{character(1)} The GitHub username}

\item{org}{\code{character(1)} optional. The organization account for which to
search repositories for.}

\item{github_token}{\code{gh_pat} The personal access token obtained from GitHub.
By default, \code{gh::gh_token()} is used.}

\item{repo_slugs}{\code{character()} A vector of owner and repository strings
collapsed by the forward slash, e.g., "owner/repo"}

\item{repo_list}{\code{list} A list as obtained from \code{account_repositories} or
\code{select_repositories}}

\item{topics}{\code{character()} A vector of topics e.g., grant award numbers
(\code{u24ca######}) that are listed under "topics" on the GitHub repository
page}

\item{repos_df}{\code{tibble} A tibble of filtered R repositories as obtained from
\code{filter_r_repos}}

\item{start_date, end_date}{\code{character(1)} The start and end dates delimiting
commit searches in the \code{YYYY-MM-DD} format}

\item{commits_list}{\code{list} The output of \code{repository_commits} that contains
commit details for each repository}
}
\value{
\code{account_repositories}: A list of repositories for the corresponding
account or organization using the \code{gh} package.

\code{select_repositories}: A list of repository metadata as obtained by
\code{"GET /repos/{owner}/{repo}"} GitHub API endpoint using the \code{gh} package.

\code{filter_r_repos}: A list of filtered repositories containing R code

\code{filter_topic_repos}: A list of filtered repositories matching any
of the topics in the GitHub repository

\code{repo_list_df}: A \code{tibble} \code{data.frame} with rows corresponding to
repositories including a column of calculated percentage of R code

\code{repository_commits}: A \code{list} of commits for each row in the
\code{repos_df} input

\code{commits_summary}: A \code{data.frame} of repositories and their
statistics including a concatenation of all commit messages (in the
\code{commit_log} column)

\code{repository_summary}: A \code{list} of \code{tibbles} that summarize activity
in the associated \code{repositories} for the \code{username} / \code{org} account

\code{summarize_commit_activity}: A \code{list} of \code{tibbles} that summarize
activity in the associated \code{repositories} for the \code{username} / \code{org}
account
}
\description{
These functions allow the user to query the GitHub API and
produce a comprehensive summary of commit activity for each R package
repository. The main workhorse function is \code{summarize_commit_activity}
which calls all other functions internally to produce a summary of GitHub R
repository activity.
}
\details{
The main function \code{summarize_commit_activity} calls most of all the
other helper functions to obtain a list of repository and commit summaries
for a specified date range. Note that \code{account_repositories} works at the
organization or user level by querying all of the repositories in the user
or organization account. \code{select_repositories} on the other hand, allows
the user to specify a character vector of owner and repository
combinations, e.g., "owner/repo".

Functions such as \code{filter_r_repos} and \code{filter_topic_repos} are utilities
to allow filtering of repositories by certain criteria.
}
\examples{
if (interactive()) {
    ## summarize overall activity for an account
    gitcreds::gitcreds_set()
    summarize_commit_activity(
        username = "LiNk-NY",
        org = "waldronlab",
        topics = "u24ca289073",
        start_date = "2023-08-31",
        end_date = "2024-09-01"
    )

    ## select only certain repositories for analysis
    slugs <- c(
        "vjcitn/TxRegInfra2",
        "vjcitn/BiocOncoTK",
        "vjcitn/YESCDS",
        "vjcitn/xenLite"
    )
    select_repositories(repo_slugs = slugs)

    ## common workflow using helper functions
    ## (alternative to summarize_commit_activity)
    username <- "LiNk-NY"
    org <- "waldronlab"
    all_repos <- account_repositories(username, org)
    r_repos <- filter_r_repos(all_repos, username, org)
    grant_repos <-
        filter_topic_repos(r_repos, username, org, "u24ca289073")
    repo_df <- repo_list_df(grant_repos)
    repo_commits <- repository_commits(
        repo_df,
        start_date = "2023-08-31", end_date = "2024-09-01"
    )
    commits_log <- commits_summary(repo_commits, repo_df)
    summary <- repository_summary(
        repo_commits, commits_log,
        start_date = "2023-08-31", end_date = "2024-09-01"
    )
    commits_log <-
        commits_summary(summary$commits_list, summary$repositories)
}
}
