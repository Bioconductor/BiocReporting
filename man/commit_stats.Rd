% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/commit-stats.R
\name{commit_stats}
\alias{commit_stats}
\alias{account_repositories}
\alias{select_repositories}
\alias{filter_r_repos}
\alias{filter_topic_repos}
\alias{repo_list_df}
\alias{repository_commits}
\alias{commits_summary}
\alias{repository_summary}
\alias{summarize_account_activity}
\alias{print.commit_summary}
\title{Get and summarize repository statistics from GitHub}
\usage{
account_repositories(username, org, github_token = gh::gh_token())

select_repositories(repo_slugs, github_token = gh::gh_token())

filter_r_repos(repo_list, username, org, github_token = gh::gh_token())

filter_topic_repos(
  repo_list,
  username,
  org,
  topics,
  github_token = gh::gh_token()
)

repo_list_df(repo_list)

repository_commits(
  repos_df,
  github_token = gh::gh_token(),
  start_date,
  end_date
)

commits_summary(commits_list, repos_df)

repository_summary(commits_list, repositories, start_date, end_date)

summarize_account_activity(
  username,
  org,
  repo_slugs,
  topics,
  start_date,
  end_date,
  github_token = gh::gh_token()
)

\method{print}{commit_summary}(x)
}
\arguments{
\item{username}{`character(1)` The GitHub username}

\item{org}{`character(1)` optional. The organization account for which to
search repositories for.}

\item{github_token}{`gh_pat` The personal access token obtained from GitHub.
By default, `gh::gh_token()` is used.}

\item{repo_slugs}{`character()` A vector of owner and repository strings
collapsed by the forward slash, e.g., "owner/repo"}

\item{repo_list}{`list` A list as obtained from `account_repositories` or
`select_repositories`}

\item{topics}{`character()` A vector of topics e.g., grant award numbers
(`u24ca######`) that are listed under "topics" on the GitHub repository
page}

\item{repos_df}{`tibble` A tibble of filtered R repositories as obtained from
`filter_r_repos`}

\item{start_date, end_date}{`character(1)` The start and end dates delimiting
commit searches in the `YYYY-MM-DD` format}

\item{commits_list}{`list` The output of `repository_commits` that contains
commit details for each repository}
}
\value{
`account_repositories`: A list of repositories for the corresponding
  account or organization

`select_repositories`: A list of repository metadata as obtained by
  `"GET /repos/{owner}/{repo}"` GitHub API endpoint using the `gh` package.

`filter_r_repos`: A list of filtered repositories containing R code

`filter_topic_repos`: A list of filtered repositories matching any
  of the topics in the GitHub repository

`repo_list_df`: A `tibble` `data.frame` with rows corresponding to
  repositories including a column of calculated percentage of R code

`repository_commits`: A `list` of commits for each row in the
  `repos_df` input

`commits_summary`: A `data.frame` of repositories and their
  statistics including a concatenation of all commit messages (in the
  `commit_log` column)

`repository_summary`: A `list` of `tibbles` that summarize activity
  in the associated `repositories` for the `username` / `org` account

`summarize_account_activity`: A `list` of `tibbles` that summarize
  activity in the associated `repositories` for the `username` / `org`
  account
}
\description{
These functions allow the user to query the GitHub API and
  produce a comprehensive summary of commit activity for each R package
  repository. The main workhorse function is `summarize_account_activity`
  which calls all other functions internally to produce a summary of GitHub R
  repository activity.
}
\examples{
if (interactive()) {
    gitcreds::gitcreds_set()
    summarize_account_activity(
        username = "LiNk-NY",
        org = "waldronlab",
        topics = "u24ca289073",
        start_date = "2023-08-31",
        end_date = "2024-09-01"
    )
}
if (interactive()) {
    username <- "LiNk-NY"
    org <- "waldronlab"
    all_repos <- account_repositories(username, org)
    r_repos <- filter_r_repos(all_repos, username, org)
    grant_repos <-
        filter_topic_repos(r_repos, username, org, "u24ca289073")
    repo_df <- repo_list_df(grant_repos)
    repo_commits <- repository_commits(
        repo_df, username, org,
        start_date = "2023-08-31", end_date = "2024-09-01"
    )
    commits_log <- commits_summary(repo_commits, repo_df)
    repository_summary(
        repo_commits, commits_log, username, org,
        start_date = "2023-08-31", end_date = "2024-09-01"
    )
}
}
